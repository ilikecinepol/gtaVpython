import matplotlib.pyplot as plt
import pandas as pd

df = pd.DataFrame()
data = '3  29  27  2  13  32  0  00  35  27  2  33  36  8  18  35  27  22  16  13  36  26  00  15  9  16  22  4  00  20  7  21  18  0  15  25  3  21  20  00  16  27  6  1  29  1  11  32  27  12  11  19  14  10  31  25  20  35  4  29  24  21  26  19  24  7  16  1  33  34  2  30  6  27  21  12  19  2  35  34  23  00  23  12  8  29  4  5  13  00  5  31  30  0  15  29  11  13  6  12  27  2  29  6  21  28  21  3  24  24  6  31  29  35  29  2  9  17  4  29  33  30  32  00  0  10  17  5  27  2  24  22  7  29  14  31  25  0  12  00  16  0  1  10  22  36  30  15  32  33  11  3  18  11  24  17  28  11  17  13  33  30  32  15  29  17  13  19  6  34  27  2  14  7  35  6  19  17  4  20  4  8  18  21  00  35  15  7  12  19  17  32  0  21  23  8  14  5  24  11  23  7  17  00  18  24  20  28  7  22  25  5  00  00  14  00  33  31  8  29  30  23  4  15  14  19  2  33  36  6  14  00  0  29  2  33  9  23  21  35  20  26  11  9  24  28  30  11  5  9  5  24  20  12  30  00  10  11  10  6  9  23  10  34  22  8  18  6  21  5  36  7  35  9  29  17  18  4  13  3  31  00  8  25  3  1  12  13  35  18  18  10  20  28  19  22  19  00  9  21  30  5  4  19  23  26  15  8  35  26  22  15  9  36  34  10  32  4  8  00  20  15  24  1  15  5  15  0  27  12  14  34  10  29  35  1  17  21  28  34  6  25  7  11  8  27  31  26  9  6  36  17  32  34  13  9  15  30  1  30  20  16  12  35  14  3  12  33  23  6  19  10  9  10  9  9  32  21  11  9  24  32  32  26  0  1  00  4  12  21  29  34  16  18  11  1  29  13  35  31  36  2  22  2  3  31  5  30  7  24  33  18  36  00  1  32  1  5  5  18  26  15  18  21  18  16  17  8  2  7  35  0  1  11  14  12  27  21  29  9  30  30  34  27  7  21  31  18  9  2  11  30  23  21  34  28  17  20  14  28  18  19  30  26  2  25  28  19  11  25  15  27  26  31  11  29  11  13  5  34  13  33  32  33  27  10  4  22  34  10  32  21  25  28  0  30  7  29  00  33  10  24  22  4  0  2  34  13  2  22  31  17  15  28  12  5  36  32  28  33  24  13  5  25  11  4  00  35  20  2  6  30  34  23  16  13  18  8  12  21  19  34  5  34  21  8  31  33  16  21  32  8  12  36  9  6  17  6  22  4  14  10  21  2  28  17  6  34  23  35  1  7  12  28  6  23  13  30  24  14  32  17  10  17  24  19  2  4  4  15  33  12  27  13  17  20  35  21  00  34  18  11  34  29  23  15  15  30  25  3  27  8  36  29  3  14  16  16  36  15  9  4  21  34  20  28  30  8  16  13  33  14  9  35  28  13  23  27  4  13  27  14  0  3  1  27  8  28  31  15  14  18  32  13  4  23  8  19  8  32  10  19  12  30  5  9  25  11  20  14  9  26  12  3  28  30  11  1  3  27  29  29  7  36  25  36  28  0  35  22  8  16  12  11  27  22  35  18  22  21  30  27  14  26  33  13  29  21  15  34  22  17  2  1  26  29  18  17  33  25  14  25  25  26  30  3  33  25  00  2  7  24  29  14  18  17  18  6  2  00  19  20  23  10  33  12  35  15  28  31  20  14  19  24  14  27  30  5  28  00  36  10  23  00  19  17  26  24  9  24  15  16  6  21  0  16  10  21  34  0  34  18  17  34  21  26  17  16  22  26  5  21  32  28  21  3  10  35  22  25  29  2  36  10  21  7  9  13  29  6  35  0  3  20  28  26  00  36  11  12  16  29  17  8  28  24  7  11  28  25  14  23  6  6  0  32  16  13  16  6  1  34  14  24  10  4  28  1  18  14  24  35  12  24  16  1  13  27  27  24  4  29  35  3  12  22  31  0  28  27  13  26  10  6  15  7  1  8  18  8  18  34  15  22  29  7  0  00  35  7  8  34  00  2  2  30  12  30  20  24  00  20  35  25  23  24  26  6  29  22  14  7  17  9  1  16  11  29  15  27  8  16  12  21  19  15  9  27  11  25  29  7  11  31  26  22  31  1  3  0  23  21  32  7  8  00  20  35  10  3  6  4  7  27  22  7  0  1  12  36  25  33  24  13  29  20  6  7  13  29  11  22  7  5  21  14  00  34  24  22  18  28  11  25  30  2  17  23  32  15  12  11  7  00  11  7  21  33  29  10  34  24  3  4  22  28  1  27  32  24  30  20  34  3  28  15  10  0  28  34  32  0  3  9  22  25  29  27  35  00  7  16  8  27  30  20  8  5  21  30  34  16  27  18  19  29  25  9  26  18  5  19  12  16  1  7  10  5  25  22  24  16  23  27  18  33  2  11  12  21  6  8  16  34  21  0  00  8  14  00  13  00  24  15  13  20  33  9  27  28  6  30  35  34  1  9  17  4  2  28  36  4  29  9  17  21  4  9  18  11  6  17  18  8  30  1  14  33  30  0  15  7  33  4  1  11  24  14  2  21  15  32  30  33  33  0  5  2  26  6  27  9  26  10  25  4  0  26  2  15  35  22  15  22  6  4  18  7  36  16  13  15  35  2  13  20  24  3  17  29  24  29  17  1  3  11  31  14  0  30  14  21  6  34  00  18  5  30  36  8  8  30  13  27  19  28  0  15  27  7  6  0  10  11  29  27  28  27  30  6  4  1  36  18  36  13  33  23  16  30  31  5  7  28  18  9  18  28  4  22  23  27  18  0  10  6  34  4  19  11  35  21  4  16  0  34  35  29  1  20  22  28  2  1  32  31  11  16  6  7  8  6  10  00  3  21  24  19  36  5  28  11  6  28  26  34  2  13  4  28  15  25  6  32  34  14  23  17  0  12  34  9  13  15  34  5  11  6  19  35  14  27  28  12  34  21  32  23  15  21  14  19  5  30  21  20  28  0  14  21  34  10  21  00  33  5  26  33  1'.split(
    '  ')

roulette = '0 28 9 26 30 11 7 20 32 17 5 22 34 15 3 24 36 13 1 00 27 10 25 29 12 8 19 31 18 6 21 33 16 4 23 35 14 2'.split()

print(roulette)
difference = []

for i in range(len(data) - 1):
    difference.append((roulette.index(data[i + 1]) - roulette.index(data[i])) % 19 if (roulette.index(
        data[i + 1]) - roulette.index(data[i])) > 19 else (roulette.index(data[i + 1]) - roulette.index(data[i])))
difference = difference[51:100]
# print(difference[:3])
# plt.plot(difference)
# plt.show()

data = [int(x) for x in data]
print(len(data))
x = [x for x in range(len(data))]
for i in range(len(data) - 3):
    window = data[i:i + 3]
    df['col_' + str(i)] = pd.Series(window)
print(df.head())


def corr(n=0):
    count = 0
    cur_df = pd.DataFrame()
    cur_df['col_0'] = df[f'col_{n}']
    cur_df['col_0'] = cur_df['col_0'] - cur_df.iloc[0]['col_0']
    for i in range(df.shape[1]):
        k = df[f'col_{n}'].corr(df[f'col_{i}'])
        if abs(k) >= 0.999 and i != n:
            cur_df[f'col_{i}'] = df[f'col_{i}']
            cur_df[f'col_{i}'] = cur_df[f'col_{i}'] - cur_df.iloc[0][f'col_{i}']

            # print(k, cur_df)
            count += 1
    print(count)
    plt.plot(cur_df)
    plt.show()


# corr(2)


def sequence(n, data=data):
    # Нахождение одинаковых последовательностей из n элементов
    result = []
    for i in range(len(data)):
        reference = data[i:i + n]
        for j in range(len(data)):
            if data[i] == data[j]  and j != i:
                if data[j:j + n] == reference:
                    result.append(reference)
    print(result)
    print(len(result))
    # print(set)
    # return result
sequence(2, data)